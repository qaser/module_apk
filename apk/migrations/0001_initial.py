# Generated by Django 3.2 on 2021-09-24 11:31

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Act',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('act_year', models.IntegerField(verbose_name='Год регистрации акта')),
                ('act_number', models.PositiveSmallIntegerField(verbose_name='Номер акта')),
                ('act_compile_date', models.DateField(auto_now_add=True, verbose_name='Дата составления')),
                ('closed', models.BooleanField(default=False, verbose_name='Отработан')),
            ],
            options={
                'verbose_name': 'акт',
                'verbose_name_plural': 'акты',
                'ordering': ('-act_compile_date',),
            },
        ),
        migrations.CreateModel(
            name='Control',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('1 уровень АПК', 'Первый уровень АПК'), ('2 уровень АПК', 'Второй уровень АПК'), ('3 уровень АПК', 'Третий уровень АПК'), ('4 уровень АПК', 'Четвёртый уровень АПК'), ('Подготовка к ОЗП', 'План подготовки к ОЗП'), ('Газнадзор', 'Газнадзор'), ('Аудит', 'Аудит')], max_length=50, verbose_name='Название проверки')),
                ('slug', models.SlugField(unique=True, verbose_name='Путь')),
                ('description', models.TextField(verbose_name='описание группы')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='название службы')),
            ],
            options={
                'verbose_name': 'служба филиала',
                'verbose_name_plural': 'службы филиала',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Fault',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fault_number', models.PositiveIntegerField(verbose_name='Номер несоответствия')),
                ('group', models.TextField(choices=[('ОТ', 'Охрана труда'), ('ПБ', 'Промышленная безопасность'), ('ПОЖ', 'Пожарная безопасность'), ('Э', 'Экологическая безопасность')], verbose_name='Группа несоответствий')),
                ('description', models.TextField(max_length=500, verbose_name='Описание несоответствия')),
                ('document', models.CharField(max_length=100, verbose_name='Нормативный документ')),
                ('danger', models.BooleanField(default=False, verbose_name='Опасное событие?')),
                ('section_esupb', models.CharField(max_length=150, verbose_name='Раздел ЕСУПБ')),
                ('image_before', models.ImageField(blank=True, null=True, upload_to='apk/photo_before/', verbose_name='Фото несоответствия')),
                ('act', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faults', to='apk.act', verbose_name='Номер акта')),
            ],
            options={
                'verbose_name': 'несоответствие',
                'verbose_name_plural': 'несоответствия',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='auth.user')),
                ('patronymic', models.CharField(blank=True, max_length=50, null=True, verbose_name='Отчество')),
                ('job_position', models.TextField(blank=True, null=True, verbose_name='Должность')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_department', to='apk.department', verbose_name='Место работы')),
            ],
            options={
                'verbose_name': 'профиль пользователя',
                'verbose_name_plural': 'профили пользователей',
                'ordering': ('user',),
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object', models.CharField(max_length=100, verbose_name='оборудование')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='department', to='apk.department', verbose_name='служба')),
            ],
            options={
                'verbose_name': 'объект проверки',
                'verbose_name_plural': 'объекты проверки',
                'ordering': ('-department',),
            },
        ),
        migrations.CreateModel(
            name='Fix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fix_action', models.TextField(default='Данные не введены', verbose_name='Мероприятие по устранению')),
                ('fix_deadline', models.DateField(blank=True, null=True, verbose_name='Срок устранения')),
                ('fixed', models.BooleanField(default=False, verbose_name='Отметка об устранении')),
                ('fix_date', models.DateField(blank=True, null=True, verbose_name='Дата устранения несоответствия')),
                ('image_after', models.ImageField(blank=True, null=True, upload_to='apk/photo_after/', verbose_name='Фото устранения')),
                ('reason', models.TextField(default='Данные не введены', max_length=500, verbose_name='Причина появления несоответствия')),
                ('correct_action', models.TextField(default='Данные не введены', verbose_name='Корректирующее действие')),
                ('resources', models.TextField(default='Данные не введены', verbose_name='Необходимые ресурсы')),
                ('correct_deadline', models.DateField(blank=True, null=True, verbose_name='Срок корректировки')),
                ('corrected', models.BooleanField(default=False, verbose_name='Отметка о корректировке')),
                ('correct_date', models.DateField(blank=True, null=True, verbose_name='Дата корректировки')),
                ('corrector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apk.profile', verbose_name='Исполнитель')),
                ('fault', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fix', to='apk.fault', verbose_name='Несоответствие')),
                ('fixer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fixer', to='apk.profile', verbose_name='Исполнитель')),
            ],
            options={
                'verbose_name': 'мероприятие',
                'verbose_name_plural': 'мероприятия',
            },
        ),
        migrations.AddField(
            model_name='fault',
            name='inspector',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inspector', to='apk.profile', verbose_name='Проверяющий'),
        ),
        migrations.AddField(
            model_name='fault',
            name='intruder',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='intruder', to='apk.profile', verbose_name='Допустивший несоответствие'),
        ),
        migrations.AddField(
            model_name='fault',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location', to='apk.location', verbose_name='Место обнаружения'),
        ),
        migrations.AddField(
            model_name='fault',
            name='unseeing',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unseeing', to='apk.profile', verbose_name='Не выявивший несоответствие'),
        ),
        migrations.AddField(
            model_name='act',
            name='control_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='control', to='apk.control', verbose_name='Уровень проверки'),
        ),
        migrations.AddConstraint(
            model_name='fault',
            constraint=models.UniqueConstraint(fields=('act', 'fault_number'), name='unique_fault_numbering'),
        ),
        migrations.AddConstraint(
            model_name='act',
            constraint=models.UniqueConstraint(fields=('act_year', 'act_number'), name='unique_act_numbering'),
        ),
    ]
